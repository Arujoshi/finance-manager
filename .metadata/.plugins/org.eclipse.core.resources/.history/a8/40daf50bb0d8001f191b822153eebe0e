package com.finance.service;

import com.finance.exception.ExpenseNotFoundException;
import com.finance.model.Expense;
import com.finance.repository.ExpenseRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class ExpenseService {
	
    @Autowired
    private ExpenseRepository expenseRepository;

    public List<Expense> getExpensesByUserId(Long userId) {
        return expenseRepository.findByUserUserId(userId);
    }

    public Expense addExpense(Expense expense) {
        return expenseRepository.save(expense);
    }

    public Expense deleteExpense(Long expenseId) throws ExpenseNotFoundException{
        Expense expense=expenseRepository.findById(expenseId)
                .orElseThrow(() -> new ExpenseNotFoundException("Expense not found with id: " + expenseId));
        expenseRepository.deleteById(expenseId);
        return expense;
    }
    
    public Expense updateExpense(Long expenseId, Expense expense) throws ExpenseNotFoundException {
    	Optional<Expense> getExpense=expenseRepository.findById(expenseId);
    	if(getExpense.isPresent()) {
    		Expense existingExpense=getExpense.get();
    		existingExpense.setAmount(expense.getAmount());
    		existingExpense.setCategory(expense.getCategory());
    		existingExpense.setDate(expense.getDate());
    		existingExpense.setDescription(expense.getDescription());
    		existingExpense.setUser(expense.getUser());
    		expenseRepository.save(existingExpense);
    		return existingExpense;
    	}else {
    		throw new ExpenseNotFoundException("Expense not found with id: " + expenseId);
    	}
    }
}

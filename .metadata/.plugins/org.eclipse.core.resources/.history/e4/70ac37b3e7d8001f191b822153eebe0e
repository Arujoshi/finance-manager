package com.finance.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.finance.dto.IncomeDTO;
import com.finance.mappper.IncomeMapper;
import com.finance.model.Income;
import com.finance.model.UserInfo;
import com.finance.repository.IncomeRepository;
import com.finance.repository.UserInfoRepository;

@Service
public class IncomeService {

    @Autowired
    private IncomeRepository incomeRepository;

    @Autowired
    private UserInfoRepository userRepository;  // To fetch UserInfo by userId

    // Create or add an income
    public IncomeDTO addIncome(Income income) {
        // Fetch the UserInfo by userId
        UserInfo user = userRepository.findById(income.getUser().getUserId())
                .orElseThrow(() -> new RuntimeException("User not found"));

        // Convert DTO to entity and set the user
        income.setUser(user);

        // Save the income entity
        Income savedIncome = incomeRepository.save(income);

        // Return the saved income as DTO
        return IncomeMapper.toDTO(savedIncome);
    }

    // Get all incomes for a user
    public List<IncomeDTO> getIncomesByUserId(Long userId) {
        List<Income> incomes = incomeRepository.findByUserUserId(userId);
        return incomes.stream().map(IncomeMapper::toDTO).collect(Collectors.toList());
    }

    // Get income by ID
    public IncomeDTO getIncomeById(Long incomeId) {
        Income income = incomeRepository.findById(incomeId)
                .orElseThrow(() -> new RuntimeException("Income not found"));
        return IncomeMapper.toDTO(income);
    }

    // Update an income
    public IncomeDTO updateIncome(Long incomeId, IncomeDTO incomeDTO) {
        Income income = incomeRepository.findById(incomeId)
                .orElseThrow(() -> new RuntimeException("Income not found"));

        income.setSource(incomeDTO.getSource());
        income.setAmount(incomeDTO.getAmount());
        income.setDate(incomeDTO.getDate());
        income.setDescription(incomeDTO.getDescription());

        // Save updated income
        Income updatedIncome = incomeRepository.save(income);

        return IncomeMapper.toDTO(updatedIncome);
    }

    // Delete an income
    public void deleteIncome(Long incomeId) {
        Income income = incomeRepository.findById(incomeId)
                .orElseThrow(() -> new RuntimeException("Income not found"));
        incomeRepository.delete(income);
    }
}
